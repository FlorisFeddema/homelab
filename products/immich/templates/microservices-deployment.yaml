kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "immich.fullname" . }}-microservices
  labels:
    app.kubernetes.io/name: {{ template "immich.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "immich-microservices"
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.server.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "immich.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "immich-microservices"
      {{- include "labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "immich.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "immich-microservices"
        {{- include "labels" . | nindent 8 }}
    spec:
      containers:
        - name: server
          image: "{{ .Values.microservices.image.registry }}/{{ .Values.microservices.image.repository }}:{{ .Values.microservices.image.tag }}"
          imagePullPolicy: {{ .Values.microservices.image.pullPolicy }}
          command:
            - "/bin/sh"
          args:
            - ./start-microservices.sh
          env:
            - name: IMMICH_METRICS
              value: "true"
            - name: DB_HOSTNAME
              value: {{ .Values.database.clusterName }}-ro.{{ .Release.Namespace }}
            - name: DB_USERNAME
              value: app
            - name: DB_DATABASE_NAME
              value: app
            - name: REDIS_HOSTNAME
              value: {{ .Release.Name }}-redis-master
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://{{ template "immich.fullname" . }}-machine-learning:3003
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.clusterName }}-app
                  key: password
          livenessProbe:
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3
            httpGet:
              port: http
              path: /api/server-info/ping
          readinessProbe:
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3
            httpGet:
              port: http
              path: /api/server-info/ping
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
            - name: config
              mountPath: /config
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
            - name: metrics
              containerPort: 3002
              protocol: TCP
          resources: {{ toYaml .Values.microservices.resources | nindent 12 }}
      volumes:
        - name: library
          persistentVolumeClaim:
            claimName: {{ template "immich.fullname" . }}-library
