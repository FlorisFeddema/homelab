kube-prometheus-stack:
  crds:
    enabled: false

  defaultRules:
    create: true
    rules:
      alertmanager: true
      etcd: true
      configReloaders: true
      general: true
      k8s: true
      kubeApiserverAvailability: true
      kubeApiserverBurnrate: true
      kubeApiserverHistogram: true
      kubeApiserverSlos: true
      kubeControllerManager: true
      kubelet: true
      kubeProxy: false
      kubePrometheusGeneral: true
      kubePrometheusNodeRecording: true
      kubernetesApps: true
      kubernetesResources: true
      kubernetesStorage: true
      kubernetesSystem: true
      kubeSchedulerAlerting: true
      kubeSchedulerRecording: true
      kubeStateMetrics: true
      network: true
      node: true
      nodeExporterAlerting: true
      nodeExporterRecording: true
      prometheus: true
      prometheusOperator: true

  global:
    rbac:
      create: true
      createAggregateClusterRoles: false

  alertmanager:
    enabled: true

    alertmanagerSpec:
      useExistingSecret: true
      configSecret: 'alertmanager-prometheus-kube-prometheus'

  grafana:
    enabled: false
    forceDeployDashboards: true

  kubeApiServer:
    enabled: true

  kubelet:
    enabled: true
    namespace: kube-system

  kubeControllerManager:
    enabled: true

  coreDns:
    enabled: true

  kubeEtcd:
    enabled: true
    service:
      enabled: true
      port: 2381
      targetPort: 2381

  kubeScheduler:
    enabled: true

  kubeProxy:
    enabled: false

  kubeStateMetrics:
    enabled: true

  kube-state-metrics:
    rbac:
      create: true
    prometheus:
      monitor:
        enabled: true
    selfMonitor:
      enabled: false

  nodeExporter:
    enabled: true

  prometheus-node-exporter:
    prometheus:
      monitor:
        enabled: true

  prometheusOperator:
    enabled: true

    tls:
      enabled: true
      tlsMinVersion: VersionTLS13
      internalPort: 10250

    admissionWebhooks:
      enabled: true
      annotations:
        argocd.argoproj.io/hook: PreSync
        argocd.argoproj.io/hook-delete-policy: HookSucceeded
      patch:
        enabled: true
        annotations:
          argocd.argoproj.io/hook: PreSync
          argocd.argoproj.io/hook-delete-policy: HookSucceeded

      certManager:
        enabled: true

    serviceAccount:
      create: true

    kubeletService:
      enabled: true
      namespace: kube-system

    serviceMonitor:
      selfMonitor: true

    resources:
      limits:
        memory: 128Mi
      requests:
        cpu: 20m
        memory: 64Mi

    verticalPodAutoscaler:
      enabled: true

    prometheusConfigReloader:
      resources:
        limits:
          memory: 64Mi
        requests:
          cpu: 20m
          memory: 32Mi

  prometheus:
    enabled: true

    serviceAccount:
      create: true

    serviceMonitor:
      selfMonitor: true

    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
        external-dns.alpha.kubernetes.io/hostname: prometheus.cloud.feddema.dev
        external-dns.alpha.kubernetes.io/ttl: "120"
        cert-manager.io/cluster-issuer: letsencrypt-dns
      hosts:
        - prometheus.cloud.feddema.dev
      tls:
        - secretName: prometheus-tls
          hosts:
            - prometheus.cloud.feddema.dev

    prometheusSpec:
      retention: 730d
      replicas: 1
      shards: 1

      serviceMonitorSelector: { }
      serviceMonitorNamespaceSelector: { }
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false

      scrapeInterval: "30s"

      resources:
        limits:
          memory: 4096Mi
        requests:
          cpu: 130m
          memory: 2048Mi

      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 500Gi

  cleanPrometheusOperatorObjectNames: true
