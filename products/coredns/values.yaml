etcd:
  auth:
    rbac:
      create: false
    token:
      privateKey:
        filename: jwt-token.pem
        existingSecret: "coredns-etcd-jwt-token"
    peer:
      secureTransport: true
      useAutoTLS: true

  removeMemberOnContainerTermination: false #if true, the etcd pod cannot be restarted after it is terminated
  initialClusterState: "existing"

  replicaCount: 3

  initialClusterToken: "etcd-cluster-coredns"
  logLevel: "warn"

  resources: {}

  startupProbe:
    enabled: true

  persistence:
    size: 5Gi

  networkPolicy:
    enabled: false

  metrics:
    enabled: true
    useSeparateEndpoint: true
    podMonitor:
      enabled: true
      namespace: coredns
    prometheusRule:
      enabled: true
      namespace: coredns

coredns:
  replicaCount: 3

  resources: {}

  prometheus:
    service:
      enabled: true
    monitor:
      enabled: true

  service:
    clusterIP: '10.96.0.100'

  isClusterService: false

  livenessProbe:
    initialDelaySeconds: 20

  readinessProbe:
    initialDelaySeconds: 20

  servers:
    - zones:
        - zone: .
      port: 53
      plugins:
        - name: log
        - name: errors
        - name: health
          configBlock:
            lameduck 5s
        - name: ready
        - name: loop
        - name: reload
        - name: loadbalance
        - name: cache
          parameters: '30'
        - name: cancel
        - name: prometheus
          parameters: '0.0.0.0:9153'
#        - name: etcd
#          configBlock:
#            endpoint coredns-etcd:2379
        - name: forward
          parameters: '. /etc/resolv.conf'
