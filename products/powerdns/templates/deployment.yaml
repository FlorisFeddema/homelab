apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "powerdns.fullname" . }}
  labels:
    app: {{ template "powerdns.name" . }}
    app.kubernetes.io/name: {{ template "powerdns.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "powerdns"
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "powerdns.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "powerdns"
      {{- include "labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "powerdns.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "powerdns"
        {{- include "labels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
        runAsNonRoot: true
      containers:
        - name: powerdns
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TEMPLATE_FILES
              value: pdns
            - name: PDNS_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.powerdns.apiKey.existingSecret }}
                  key: apiKey
            - name: POWERDNS_POSTGRES_PASSSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.powerdns.database.postgres.existingSecret }}
                  key: postgres-password
          ports:
            - name: dns-udp
              containerPort: 5300
              protocol: UDP
            - name: dns-tcp
              containerPort: 5300
              protocol: TCP
            - name: api
              containerPort: 8081
              protocol: TCP
          resources: {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: custom-config
              mountPath: /etc/powerdns/templates.d
            - name: default-config
              mountPath: /etc/powerdns/pdns.conf
              subPath: pdns.conf
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: test
          emptyDir: {}
        - name: custom-config
          configMap:
            name: {{ template "powerdns.fullname" . }}-config
            items:
              - key: pdns.j2
                path: pdns.j2
        - name: default-config
          configMap:
            name: {{ template "powerdns.fullname" . }}-config
            items:
              - key: pdns.conf
                path: pdns.conf
