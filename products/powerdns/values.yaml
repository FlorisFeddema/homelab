auth:
  image:
    registry: docker.io
    repository: powerdns/pdns-auth-48
    tag: 4.8.4

  service:
    # https://docs.cilium.io/en/v1.14/network/concepts/ipam/cluster-pool/
    # https://kubernetes.io/docs/concepts/services-networking/cluster-ip-allocation/
    clusterIP: 10.96.0.100

  config:
    logLevel: 4
    defaultTtl: 3600
    logDnsDetails: yes
    logDnsQueries: yes
    apiKey:
      existingSecret: "powerdnsprimary-auth-credentials" #key = apiKey

  primary:
    resources: {}
    postgres:
      existingSecret: "powerdnsprimary-auth-credentials" #key = postgres-password
      host: 'platform-pgbouncer.pgo.svc'
      port: 5432
      databaseName: 'powerdnsprimary'
      user: 'powerdnsprimary'

  secondary:
    resources: {}
    replicas: 1
    postgres:
      existingSecret: "powerdnssecondary-auth-credentials" #key = postgres-password
      host: 'platform-pgbouncer.pgo.svc'
      port: 5432
      databaseName: 'powerdnsprimary'
      user: 'powerdnssecondary'

recursor:
  resources: {}
  replicas: 1

  service:
    # https://docs.cilium.io/en/v1.14/network/concepts/ipam/cluster-pool/
    # https://kubernetes.io/docs/concepts/services-networking/cluster-ip-allocation/
    clusterIP: 10.96.0.101

  image:
    registry: docker.io
    repository: powerdns/pdns-recursor-49
    tag: 4.9.2

  config:
    logLevel: 4
    apiKey:
      existingSecret: "powerdns-recursor-credentials" #key = apiKey

admin:
  replicas: 1
  resources: {}

  image:
    registry: docker.io
    repository: powerdnsadmin/pda-legacy
    tag: 0.4.1

  config:
    existingSecret: "powerdns-admin-credentials" #keys = adminKey, databaseConnectionString

  ingress:
    enabled: true
    domain: powerdns.cloud.feddema.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-dns
    tls:
      - hosts:
          - powerdns.cloud.feddema.dev
        secretName: powerdns-admin-tls

