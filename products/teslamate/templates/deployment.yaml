apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "teslamate.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "teslamate.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "teslamate"
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  strategy: {{ toYaml .Values.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "teslamate.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "teslamate"
      {{- include "labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "teslamate.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "teslamate"
        {{- include "labels" . | nindent 8 }}
    spec:
      containers:
        - name: teslamate
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: DISABLE_MQTT
              value: "false"
            - name: MQTT_HOST
              value: "{{ .Values.config.mqtt.host }}"
            - name: MQTT_PORT
              value: "{{ .Values.config.mqtt.port }}"
            - name: MQTT_TLS
              value: "{{ .Values.config.mqtt.tls }}"
            - name: MQTT_USERNAME
              value: "{{ .Values.config.mqtt.user }}"
            - name: MQTT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name:  {{ .Values.config.secret.name }}
                  key: mqttPassword
            - name: VIRTUAL_HOST
              value: "{{ .Values.ingress.domain }}"
            - name: DATABASE_USER
              value: "{{ .Values.config.database.user }}"
            - name: DATABASE_NAME
              value: "{{ .Values.config.database.name }}"
            - name: DATABASE_PORT
              value: "{{ .Values.config.database.port }}"
            - name: DATABASE_HOST
              value: "{{ .Values.config.database.host }}"
            - name: TZ
              value: "{{ .Values.config.timezone }}"
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secret.name }}
                  key: encryptionKey
            - name: DATABASE_PASS
              valueFrom:
                secretKeyRef:
                  name:  {{ .Values.config.secret.name }}
                  key: databasePassword
          ports:
            - containerPort: 4000
              protocol: TCP
          resources: {{ toYaml .Values.resources | nindent 12 }}
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
