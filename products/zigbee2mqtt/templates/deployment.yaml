apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "zigbee2mqtt.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "zigbee2mqtt.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "zigbee2mqtt"
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "zigbee2mqtt.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "zigbee2mqtt"
      {{- include "labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "zigbee2mqtt.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "zigbee2mqtt"
        {{- include "labels" . | nindent 8 }}
    spec:
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      initContainers:
        - name: copy-config
          image: "{{ .Values.copyConfig.image.registry }}/{{ .Values.copyConfig.image.repository }}:{{ .Values.copyConfig.image.tag }}"
          imagePullPolicy: IfNotPresent
          command:
            - "sh"
            - "-c"
            - |
              if [ -f /config/configuration.yaml ]; then
                    echo "Old config:"
                    cat /config/configuration.yaml
{{/*                echo "Copy current config to /config/configuration.yaml.old"*/}}
{{/*                cp /config/configuration.yaml /config/configuration.yaml.old*/}}
              fi
              cp /tmp/configuration.yaml /config/configuration.yaml
              echo "==================================="
              echo "New config:"
              cat /config/configuration.yaml
          volumeMounts:
            - name: default-config
              mountPath: /tmp/configuration.yaml
              subPath: configuration.yaml
            - name: config
              mountPath: /config
      containers:
        - name: zigbee2mqtt
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: "Europe/Amsterdam"
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          resources: {{ toYaml .Values.resources | nindent 12 }}
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - mountPath: /app/data
              name: config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ template "zigbee2mqtt.fullname" . }}
        - name: default-config
          configMap:
              name: {{ template "zigbee2mqtt.fullname" . }}
