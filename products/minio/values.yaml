minio:
  mode: standalone
  existingSecret: "minio-credentials"

  drivesPerNode: 1
  replicas: 1
  pools: 1

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 50Gi

  service:
    type: ClusterIP
    clusterIP: ~
    port: "9000"

  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-dns
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    path: /
    hosts:
      - s3.minio.feddema.dev
    tls:
      - secretName: s3-minio-tls
        hosts:
          - s3.minio.feddema.dev

  consoleIngress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-dns
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    path: /
    hosts:
      - minio.feddema.dev
    tls:
      - secretName: minio-tls
        hosts:
          - minio.feddema.dev

  resources:
    requests:
      memory: 256Mi
      cpu: 50m

  users:
    - accessKey: loki
      existingSecret: loki-credentials
      existingSecretKey: secretKey
      policy: readwrite

  buckets:
    - name: loki-chunks
      policy: none
      purge: false
      versioning: false
    - name: pg-backup-home-assistant
      policy: none
      purge: false
      versioning: false
    - name: pg-backup-authentik
      policy: none
      purge: false
      versioning: false
    - name: pg-backup-nextcloud
      policy: none
      purge: false
      versioning: false
    - name: pg-backup-teslamate
      policy: none
      purge: false
      versioning: false
    - name: pg-backup-gatus
      policy: none
      purge: false
      versioning: false

  metrics:
    serviceMonitor:
      enabled: true
      includeNode: true
