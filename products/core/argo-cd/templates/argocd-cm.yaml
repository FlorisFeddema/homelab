apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  url: https://argocd.feddema.dev

  application.resourceTrackingMethod: annotation
  users.anonymous.enabled: "false"

  accounts.infro: "apiKey"
  accounts.kubechecks: "apiKey"

  admin.enabled: "false"

  timeout.reconciliation: 180s
  cluster.inClusterEnabled: "true"

  resource.exclusions: |
    - apiGroups:
        - cilium.io
      kinds:
        - CiliumIdentity
      clusters:
        - "*"

  resource.customizations.ignoreDifferences.argoproj.io_Application: |
    jqPathExpressions:
    - .metadata.finalizers[]? | select(. == "post-delete-finalizer.argocd.argoproj.io" or . == "post-delete-finalizer.argocd.argoproj.io/cleanup")
    - if (.metadata.finalizers | length) == 0 then .metadata.finalizers else empty end


  resource.customizations.actions.postgresql.cnpg.io_Cluster: |
    discovery.lua: |
      actions = {}
      actions["restart"] = {}
      actions["reload"] = {}
      return actions

    definitions:
      - name: restart
        action.lua: |
          local os = require("os")
          if obj.metadata == nil then
            obj.metadata = {}
          end
          if obj.metadata.annotations == nil then
            obj.metadata.annotations = {}
          end
          obj.metadata.annotations["kubectl.kubernetes.io/restartedAt"] = os.date("!%Y-%m-%dT%XZ")
          return obj
      - name: reload
        action.lua: |
          local os = require("os")
          if obj.metadata == nil then
            obj.metadata = {}
          end
          if obj.metadata.annotations == nil then
            obj.metadata.annotations = {}
          end
          obj.metadata.annotations["cnpg.io/reloadedAt"] = os.date("!%Y-%m-%dT%XZ")
          return obj


  server.rbac.log.enforce.enable: "false"

  exec.enabled: "true"
  exec.shells: "bash,sh,powershell,cmd"

  oidc.tls.insecure.skip.verify: "false"
  oidc.config: |
    name: Authentik
    issuer: https://authentik.feddema.dev/application/o/argocd/
    clientID: 7uRmOU7Cho0KwDa7SIODe0ugmQ5djIvDuN3wUeux
    clientSecret: $authentik-credentials:clientSecret
    requestedScopes: ["openid", "profile", "email", "groups"]
    logoutURL: https://authentik.feddema.dev/application/o/argocd/end-session/

