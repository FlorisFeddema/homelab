kube-prometheus-stack:
  cleanPrometheusOperatorObjectNames: true
  crds:
    enabled: false

  defaultRules:
    rules:
      kubeProxy: false
      etcd: false
      windows: false

  prometheusOperator:
    revisionHistoryLimit: 0

  prometheus:
    prometheusSpec:
      probeSelectorNilUsesHelmValues: false
      scrapeConfigSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false

  alertmanager:
    enabled: true

    alertmanagerSpec:
      useExistingSecret: true
      configSecret: 'alertmanager-config'
      externalUrl: https://alertmanager.feddema.dev

    ingress:
      enabled: true
      hosts:
        - alertmanager.feddema.dev

      tls:
        - secretName: alertmanager-tls
          hosts:
            - alertmanager.feddema.dev

      annotations:
        nginx.ingress.kubernetes.io/auth-url: |-
          http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: |-
          https://alertmanager.feddema.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: |-
          Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
        nginx.ingress.kubernetes.io/auth-snippet: |
          proxy_set_header X-Forwarded-Host $http_host;
        cert-manager.io/cluster-issuer: letsencrypt-dns

  grafana:
    enabled: false
    forceDeployDatasources: true
    forceDeployDashboards: true

  kubeEtcd:
    enabled: false

  kubeProxy:
    enabled: false

  kube-state-metrics:
    revisionHistoryLimit: 0

  prometheus-node-exporter:
    revisionHistoryLimit: 0
    namespaceOverride: "prometheus-node-exporter"
