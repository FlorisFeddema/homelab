apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
  annotations:
    cloud.feddema.dev/helm-updater-skip: "true"
  finalizers: []
#    - resources-finalizer.argocd.argoproj.io

spec:
  project: no-sync
  source:
    chart: grafana
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.50.0

    helm:
      values: |
        rbac:
          create: true
          pspEnabled: false
        
        serviceAccount:
          create: true
        
        replicas: 1
        
        testFramework:
          enabled: true
        
        createConfigmap: true
        
        ingress:
          enabled: true
        
          annotations:
            external-dns.alpha.kubernetes.io/hostname: grafana.cloud.feddema.dev
            external-dns.alpha.kubernetes.io/ttl: "120"
            ingress.kubernetes.io/rewrite-target: /
            cert-manager.io/cluster-issuer: letsencrypt
        
          path: /
        
          pathType: ImplementationSpecific
        
          hosts:
            - grafana.cloud.feddema.dev
        
          tls:
            - hosts:
                - grafana.cloud.feddema.dev
              secretName: "grafana-tls"
        
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        
        persistence:
          type: pvc
          enabled: true
          accessModes:
            - ReadWriteOnce
          size: 16Gi
        
        initChownData:
          enabled: true
          resources:
            limits:
              memory: 64Mi
            requests:
              cpu: 20m
              memory: 32
        
        admin:
          existingSecret: "grafana-credentials"
          userKey: admin-user
          passwordKey: admin-password

        # dashboardProviders: 
        #   dashboardproviders.yaml:
        #     apiVersion: 1
        #     providers:
        #     - name: 'default'
        #       orgId: 1
        #       folder: ''
        #       type: file
        #       disableDeletion: false
        #       editable: true
        #       options:
        #         path: /var/lib/grafana/dashboards/default
        
        # dashboards:
        #   prometheus:
        #     gnetId: 2
        #     revision: 2
        #     datasource: Prometheus
        #   kube-state-metrics-v2:
        #     gnetId: 6417
        #     revision: 2
        #     datasource: Prometheus
        #   postgresql:
        #     gnetId: 9628
        #     revision: 2
        #     datasource: Prometheus
        #   nginx-ingress-controller:
        #     gnetId: 9614
        #     revision: 2
        #     datasource: Prometheus
        #   longhorn:
        #     gnetId: 16888
        #     revision: 1 
        #     datasource: Prometheus
        #   kubernetes-apiserver:
        #     gnetId: 12006
        #     revision: 3
        #     datasource: Prometheus
        #   keycloak:
        #     gnetId: 10441
        #     revision: 2
        #     datasource: Prometheus
        #   external-dns:
        #     gnetId: 15038
        #     revision: 1
        #     datasource: Prometheus
        #   coredns:
        #     gnetId: 14981
        #     revision: 1
        #     datasource: Prometheus
        #   cluster-monitoring:
        #     gnetId: 10000
        #     revision: 1
        #     datasource: Prometheus
        #   argocd:
        #     gnetId: 14584
        #     revision: 2
        #     datasource: Prometheus
        #   nextcloud:
        #     gnetId: 9632
        #     revision: 1
        #     datasource: Prometheus
        #   calico:
        #     gnetId: 3244
        #     revision: 1
        #     datasource: Prometheus
        #   metallb:
        #     gnetId: 14127
        #     revision: 1
        #     datasource: Prometheus
        #   velero:
        #     gnetId: 15469
        #     revision: 1
        #     datasource: Prometheus

        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              url: http://prometheus-server.prometheus.svc.cluster.local
              access: proxy
              isDefault: true

        extraSecretMounts:
        - name: auth-generic-oauth-secret-mount
          secretName: grafana-oauth-credentials
          defaultMode: 0440
          mountPath: /etc/secrets/auth_generic_oauth
          readOnly: true
        
        ## ref: http://docs.grafana.org/installation/configuration/
        grafana.ini:
          auth.generic_oauth:
              enabled: true
              name: Keycloak
              allow_sign_up: true
              scopes: "openid email profile offline_access roles"
              email_attribute_path: email
              login_attribute_path: username
              name_attribute_path: full_name
              auth_url: "https://auth.cloud.feddema.dev/realms/master/protocol/openid-connect/auth"
              token_url: "https://auth.cloud.feddema.dev/realms/master/protocol/openid-connect/token"
              api_url: "https://auth.cloud.feddema.dev/realms/master/protocol/openid-connect/userinfo"
              client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
              client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
              allow_assign_grafana_admin: true
              role_attribute_path: contains(realm_access.roles[*], 'admin') && 'GrafanaAdmin' || 'Admin'
          paths:
            data: /var/lib/grafana
            logs: /var/log/grafana
            plugins: /var/lib/grafana/plugins
            provisioning: /etc/grafana/provisioning
          analytics:
            check_for_updates: true
          log:
            mode: console
          grafana_net:
            url: https://grafana.net
          server:
            domain: "https://grafana.cloud.feddema.dev"
            root_url: "https://grafana.cloud.feddema.dev"

  destination:
    server: https://kubernetes.default.svc
    namespace: grafana

  revisionHistoryLimit: 2
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 5
        maxDuration: 10m

